name: bookstore_ui CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  cache-node_modules-name: npm-packages

jobs:
  linting:
    name: Linter
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Caching dependencies
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-${{env.cache-node_modules-name}}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{env.cache-node_modules-name}}-

      - name: Install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run Prettier Linter
        run: |
          echo "Running Prettier Linter"
          npm install react-scripts && npm run lint
          lint_exit_code=$?
          if [ $lint_exit_code -ne 0 ]; then
              echo "Linting failed. Exiting pipeline..."
              exit $lint_exit_code
          fi

  Tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: [linting]

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore cache
        id: restore-cache-node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{env.cache-node_modules-name}}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{env.cache-node_modules-name}}-

      - name: Install dependencies
        if: steps.restore-cache-node_modules.outputs.cache-hit != 'true' # Run only if cache is not found
        run: npm ci

      - name: Running Tests
        run: npm install react-scripts && npm run test:coverage-report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info

  code-scanner:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    needs: [linting]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [linting, Tests, code-scanner]

    steps:
      - name: Build
        run: npm run build
