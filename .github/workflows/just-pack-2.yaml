name: bookstore_ui CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  cache-node_modules-name: npm-packages

jobs:
  Shiping:
    name: Packaging Scanning & Shipping
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore cache
        id: restore-cache-node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{env.cache-node_modules-name}}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{env.cache-node_modules-name}}-

      - name: Install dependencies
        if: steps.restore-cache-node_modules.outputs.cache-hit != 'true' # Run only if cache is not found
        run: npm ci

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker login --username "${DOCKER_USERNAME}" --password "${DOCKER_TOKEN}"
      
      - name: Building Image
        run: docker build -t bookstore_ui .

      - name: Taging an Image
        run: docker tag bookstore_ui ${{ env.DOCKER_USERNAME }}/bookstore_ui:${{ github.event.pull_request.number }}-${{ github.run_id }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.DOCKER_USERNAME }}/bookstore_ui:${{ github.event.pull_request.number }}-${{ github.run_id }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Shipping Image to Docker Hub
        run: docker push ${{ env.DOCKER_USERNAME }}/bookstore_ui:${{ github.event.pull_request.number }}-${{ github.run_id }}      
        